import { useUser } from "@clerk/nextjs";
import { type Listing } from "@prisma/client";
import Head from "next/head";
import { useRouter } from "next/router";
import { useForm } from "react-hook-form";
import { api } from "~/utils/api";

export default function ListingView() {
  const router = useRouter();
  const { register, handleSubmit, reset } = useForm<{ message: string }>();

  const listing = api.listings.get.useQuery(
    {
      listingId: router.query.id as string,
    },
    {
      enabled: !!router.query.id,
    },
  );
  const user = useUser();
  const sendMessage = api.listings.sendMessage.useMutation();

  const listingItem = listing.data;

  if (!listingItem) {
    return;
  }

  return (
    <>
      <Head>
        <title>View Listing</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col gap-12 bg-gray-800">
        <div className="container mx-auto flex flex-col">
          <h1 className="mt-12 text-4xl">{listingItem.name}</h1>
          <p>{listingItem.description}</p>
          <p>$ {listingItem.price}</p>

          {user.isSignedIn && (
            <>
              <form
                className="flex flex-col gap-4"
                onSubmit={handleSubmit((formData) => {
                  sendMessage
                    .mutateAsync({
                      message: formData.message,
                      listingId: listingItem.id,
                    })
                    .then(() => reset());
                })}
              >
                <div>
                  <label
                    htmlFor="message"
                    className="mb-2 block text-sm font-medium text-gray-900 dark:text-white"
                  >
                    Message
                  </label>
                  <textarea
                    id="message"
                    className="block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500"
                    {...register("message", { required: true })}
                  />
                </div>
                <button className="mb-2 me-2 rounded-lg bg-blue-700 px-5 py-2.5 text-sm font-medium text-white hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                  Send It
                </button>
              </form>
            </>
          )}
        </div>
      </main>
    </>
  );
}
